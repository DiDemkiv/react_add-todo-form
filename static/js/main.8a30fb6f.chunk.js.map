{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","App","useState","storedTodos","setStoredTodos","setTitle","setUserId","showUserError","setShowUserError","showTitleError","setShowTitleError","onSubmit","event","preventDefault","shouldExit","trim","newTodo","Math","max","value","type","placeholder","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8a30fb6f.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const { title, user, completed } = todo;\n\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames('TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\n\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [storedTodos, setStoredTodos] = useState(todos);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState('0');\n  const [showUserError, setShowUserError] = useState(false);\n  const [showTitleError, setShowTitleError] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form onSubmit={(event) => {\n        event.preventDefault();\n        let shouldExit = false;\n\n        if (userId === '0') {\n          setShowUserError(true);\n          shouldExit = true;\n        }\n\n        if (!title.trim()) {\n          setShowTitleError(true);\n          shouldExit = true;\n        }\n\n        if (shouldExit) {\n          return;\n        }\n\n        const newTodo = {\n          id: Math.max(...storedTodos.map(todo => todo.id)) + 1,\n          title,\n          userId: +userId,\n          completed: false,\n          user: getUser(+userId),\n        };\n\n        setStoredTodos([...storedTodos, newTodo]);\n\n        setTitle('');\n        setUserId('0');\n      }}\n      >\n        <div className=\"field\">\n          <input\n            name=\"title\"\n            value={title}\n            type=\"text\"\n            placeholder=\"Enter the title\"\n            data-cy=\"titleInput\"\n            onChange={(event) => {\n              setShowTitleError(false);\n              setTitle(event.target.value);\n            }}\n          />\n          {showTitleError\n            && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            name=\"user\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={(event) => {\n              setShowUserError(false);\n              setUserId(event.target.value);\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {showUserError\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={storedTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}